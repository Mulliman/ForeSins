@using ForeSins.App.Database
@using ForeSins.App.Shared.Atoms
@using ForeSins.App.Shared.Surfaces

@page "/"
@layout PlainLayout

@inject NavigationManager NavigationManager
@inject RoundRepository Repo

<Fairway>
    <div>
        <div class="pt-6 fs-max-66 fs-margin-auto">
            <Logo />
        </div>

        <Cta Text="Start Confessing" Class="mt-3" @onclick='() => NavigationManager.NavigateTo("/dashboard")' EndIcon="@Icons.Filled.Whatshot" IsImportant="true" />
        <Cta Text="Learn more" Class="mt-3" ScrollToId="read-more" EndIcon="@Icons.Filled.ArrowDownward" IsWhite="true" />

        @*<div class="fs-max-90 fs-margin-auto fs-text-center fs-input-panel">
            <h3>Tracking your golf statistics shouldn't be a ball-ache.</h3>
            <p class="pt-3 styled-p"><ForeSinsText /> takes a simple approach to recording and analyzing your performance on the golf course.</p>
            <p class="pt-3 styled-p">Forget tediously typing in tons of data, say goodbye to strokes gained, and simplify your stats to one straightforward question...
            </p>
            <h2 class="fs-heading mt-5"><Horny IsLarge="true" Text="Are you a sinner?"></Horny></h2>
            </div>*@
    </div>

    <GrassSpacer></GrassSpacer>

</Fairway>
<Green HasCurvedTop="true">
    <div id="read-more" class="fs-scroll-target"></div>

    <div style="text-align:center">
        <h2 class="fs-heading fs-margin-auto" style="text-align:justify; display:inline-block;">
            <span class="fs-main-dark-red--imp">6</span>0 seconds effort<br />
            <span class="fs-main-dark-red--imp">6</span> simple sin stats<br />
            <span class="fs-main-dark-red--imp">6</span> levels of sinner
        </h2>
    </div>

    <div class="fs-max-90 fs-margin-auto fs-text-center fs-input-panel">
        <h3>Tracking your golf statistics shouldn't be a ball-ache.</h3>
        <p class="pt-3 styled-p"><ForeSinsText /> takes a simple approach to recording and analyzing your performance on the golf course.</p>
        <p class="pt-3 styled-p">
            Forget tediously typing in tons of data, say goodbye to strokes gained, and simplify your stats to one straightforward question...
        </p>
        <h2 class="fs-heading mt-6"><Horny IsLarge="true" Text="Are you a sinner?"></Horny></h2>
    </div>

    <GrassSpacer></GrassSpacer>
</Green>

<Hell HasCurvedTop="true" HasGrass="true">
    <h2 class="fs-heading mt-3 mb-7">What is a sin?</h2>

    <div class="fs-max-80 fs-margin-auto fs-text-center mb-3">
        <h3>A <ForeSinsText IsSingular="true" />, or sin for short, is an unforgivable mistake made on the golf course.</h3>
        <p class="pt-3 styled-p">Reducing these stupid mistakes is an easy way to reduce your scores without having to make swing changes. Organised into 6 categories, the sins tracked are the following:</p>
    </div>

    <div class="fs-max-90 fs-50-50 mt-5">
        <div class="justify-center">
            <Sin TheSin="Sins.SickeningYips" />
        </div>
        <div class="justify-center">
            <Sin TheSin="Sins.ShockingChips" />
        </div>
    </div>
    <div class="fs-max-90 fs-50-50 mt-5">
        <div class="justify-center">
            <Sin TheSin="Sins.SplashTroubles" />
        </div>
        <div class="justify-center">
            <Sin TheSin="Sins.ScrappyDoubles" />
        </div>
    </div>
    <div class="fs-max-90 fs-50-50 mt-5">
        <div class="justify-center">
            <Sin TheSin="Sins.SquanderedPositions" />
        </div>
        <div class="justify-center">
            <Sin TheSin="Sins.StupidDecisions" />
        </div>
    </div>

    <div class="fs-text-center my-5">
        <MudButton Size="Size.Small" Variant="Variant.Filled" Color="Color.Dark" Link="/help/sins">Learn what each means</MudButton>
    </div>

    
</Hell>


<Cta Text="Add a round" Class="mt-3" @onclick='() => NavigationManager.NavigateTo("/edit-round")' EndIcon="@Icons.Filled.Add" IsImportant="true" />
@code {
    protected override async Task OnInitializedAsync()
    {
        var rounds = await Repo.GetRounds();

        if (rounds != null && rounds.Any())
        {
            NavigationManager.NavigateTo("/dashboard");
        }
    }

    public void GetStarted()
    {
        NavigationManager.NavigateTo("/dashboard");
    }


}