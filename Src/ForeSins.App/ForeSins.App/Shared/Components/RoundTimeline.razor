@inject Grader Grader
@inject NavigationManager NavManager

@if (Rounds != null)
{
	<MudTimeline TimelineOrientation="TimelineOrientation.Vertical">
		@foreach (var round in Rounds.OrderByDescending(r => r.Date))
		{
			var grade = Grader.Grade(round);

		 <MudTimelineItem Color="Color.Transparent" Size="Size.Small" Elevation="0" Variant="Variant.Filled" TimelineAlign="TimelineAlign.End" @onclick="@(() => Redirect(round))">
		  <ItemOpposite>
		   <MudText @onclick="@(() => Redirect(round))" Align="Align.Center"><strong>@(round.Date?.ToString("dd"))</strong><br />@(round.Date?.ToString("MMM yy"))</MudText>
		  </ItemOpposite>
		  <ItemContent>
		   <MudText Align="Align.Center"><Horny Text="@round.Sins.ToString()"></Horny><br /><strong><GolfScore Score="@round.ResultToPar" /></strong> (<GolfScore Score="@round.ResultToHandicap" />)</MudText>
		  </ItemContent>
		  <ItemDot>
		   <GradeDot Grade="grade" />
		  </ItemDot>
		 </MudTimelineItem>
		}
	</MudTimeline>
}


@code {
	[Parameter] public List<Round> Rounds { get; set; }

	public void Redirect(Round round)
	{
		Console.WriteLine("Redirect");
		NavManager.NavigateTo($"/edit-round/{round.Id.ToString("N")}");
	}
}